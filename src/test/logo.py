import time

# --- Logo 定义 ---
# 我们在这里定义5个版本的Logo
# 使用 \033[xxm ANSI 转义序列来设置颜色
# \033[0m 是重置所有颜色和样式
# \033[1m 是加粗
# \033[9_m 是亮色 (91=亮红, 92=亮绿, 93=亮黄, 94=亮蓝, 95=亮洋红, 96=亮青色, 97=亮白)

v1_name = "V1: 科技-数据流 (亮绿色)"
v1_art = """
\033[92m
>> > P U B C R A W L E R >
[#]=======================[#]
>> > 1011010100101011010 >
\033[0m
"""

v2_name = "V2: 爬虫-蜘蛛网 (亮白/亮红)"
v2_art = """
\033[97m
      /  \\
     /    \\
\033[91m \ \ \033[97m( PubCrawler )\033[91m / /
\033[97m  \ \ \  / / /  / /
   \ \/ /  \ \/ /
    \/ /    \/ /
\033[0m
"""

v3_name = "V3: 现代-结构块 (亮洋红/亮黄)"
v3_art = """
\033[95m
[P] [U] [B]
 \   |   /
\033[93m  [C]-[R]-[A]
\033[95m   /  |    \\
\033[93m [W]-[L]-[E]-[R]
\033[0m
"""

v4_name = "V4: 简洁-电路板 (亮蓝色/亮白)"
v4_art = """
\033[94m
|--[P]--|--[U]--|--[B]--|
|        |       |
|__      |__     |__
   |        |       |
|--[C]--|--[R]--|--[A]--|
|        |       |
|__      |__     |__
   |        |       |
|--[W]--|--[L]--|--[E]--|--[R]--|
\033[97m
... data ... crawl ... analyze ...
\033[0m
"""

v5_name = "V5: 大气-信息框 (亮白/亮青色)"
v5_art = """
\033[97m
+--------------------------+
|                          |
|  \033[96mP U B C R A W L E R\033[97m     |
|      \033[97m...initializing...  |
+--------------------------+
\033[0m
"""

# --- 存储和打印 ---

logos_to_display = [
    (v1_name, v1_art),
    (v2_name, v2_art),
    (v3_name, v3_art),
    (v4_name, v4_art),
    (v5_name, v5_art)
]

def display_logos():
    """
    依次打印所有Logo，带暂停。
    """
    print("正在为您展示5款 'PubCrawler' 科技感Logo设计...")
    print("（请确保您的控制台支持ANSI颜色代码以获得最佳效果）")
    time.sleep(2)

    for name, art in logos_to_display:
        print("\n" * 4)  # 打印几个换行符来分隔
        # \033[1m 是加粗
        print(f"\033[1m--- {name} ---\033[0m")
        print(art)
        print(f"\033[1m--- End of {name.split(':')[0]} ---\033[0m")
        time.sleep(2.5) # 暂停2.5秒

    print("\n" * 4)
    print("全部版本展示完毕！")
    print("您可以从上面的5个版本中选择一个，将对应的字符串（例如 v1_art）复制到您的项目代码中。")

# --- 主程序执行 ---
if __name__ == "__main__":
    display_logos()